name: Daily OpenAPI Spec Fetch

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      openapi_url:
        description: 'URL to fetch OpenAPI spec from (optional, overrides repository variable)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: openapi-generation
  cancel-in-progress: false

jobs:
  fetch-and-generate:
    name: Fetch OpenAPI Spec and Generate Kotlin Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Install Python dependencies
        run: |
          cd scripts
          pip install -r requirements.txt

      - name: Determine OpenAPI URL
        id: url-config
        run: |
          if [[ -n "${{ inputs.openapi_url }}" ]]; then
            echo "Using URL from workflow input"
            OPENAPI_URL="${{ inputs.openapi_url }}"
          elif [[ -n "${{ vars.INPUT_JSON_URL }}" ]]; then
            echo "Using URL from repository variable"
            OPENAPI_URL="${{ vars.INPUT_JSON_URL }}"
          else
            echo "::error::No OpenAPI URL provided. Please set the INPUT_JSON_URL repository variable or provide URL via workflow dispatch."
            exit 1
          fi
          echo "openapi_url=${OPENAPI_URL}" >> $GITHUB_OUTPUT

      - name: Download OpenAPI spec
        run: |
          echo "Downloading OpenAPI spec from: ${{ steps.url-config.outputs.openapi_url }}"
          curl -L -o scripts/openapi.json "${{ steps.url-config.outputs.openapi_url }}"

      - name: Check for changes in OpenAPI spec
        id: git-check
        run: |
          git add scripts/openapi.json
          if git diff --staged --quiet -- scripts/openapi.json; then
            echo "No changes detected in OpenAPI spec"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in OpenAPI spec"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate Kotlin code from OpenAPI spec
        if: steps.git-check.outputs.has_changes == 'true'
        run: |
          cd scripts
          bash codegen.sh

      - name: Grant execute permission for gradlew
        if: steps.git-check.outputs.has_changes == 'true'
        run: chmod +x gradlew

      - name: Verify Gradle project builds
        if: steps.git-check.outputs.has_changes == 'true'
        run: ./gradlew build

      - name: Run tests
        if: steps.git-check.outputs.has_changes == 'true'
        run: ./gradlew test

      - name: Create or Update Pull Request
        if: steps.git-check.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/update-openapi-spec
          base: main
          commit-message: 'feat: update generated Kotlin files from latest OpenAPI spec'
          title: 'feat: update generated Kotlin files from latest OpenAPI spec'
          body: |
            This PR updates the OpenAPI specification from the upstream source and regenerates Kotlin code based on OpenAPI changes.

            - Source: ${{ steps.url-config.outputs.openapi_url }}
            - Generated by: Daily OpenAPI Spec Fetch workflow
            - Generated files:
              - `types/src/main/kotlin/org/near/jsonrpc/types/Types.kt`
              - `client/src/main/kotlin/org/near/jsonrpc/client/Methods.kt`
              - Mock JSON test files
              - Test files

            ## Verification
            - ✅ Gradle project builds successfully
            - ✅ All tests pass
