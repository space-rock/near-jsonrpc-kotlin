name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  test-linux:
    name: Test & Build (Linux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements.txt'

      - name: Install Python dependencies
        run: |
          cd scripts
          pip install -r requirements.txt

      - name: Generate Kotlin code from OpenAPI spec
        run: |
          cd scripts
          bash codegen.sh

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Kotlin project
        run: ./gradlew build

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./types/build/reports/jacoco/test/jacocoTestReport.xml,./client/build/reports/jacoco/test/jacocoTestReport.xml
          flags: linux
          name: linux-coverage
          fail_ci_if_error: false
          verbose: true

  validate-package:
    name: Validate Gradle Project
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test-linux]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Validate Gradle Project Structure
        run: |
          echo "ðŸ“¦ Validating Gradle Project..."
          ./gradlew projects
          echo "âœ… Project structure is valid"
